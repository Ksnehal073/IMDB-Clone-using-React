[{"C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\index.js":"1","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\App.js":"2","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\header\\Header.js":"3","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\pages\\home\\Home.js":"4","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\card\\Card.js":"5","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\movieList\\MovieList.js":"6","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\pages\\movieDetail\\Movie.js":"7"},{"size":426,"mtime":1675572376960,"results":"8","hashOfConfig":"9"},{"size":891,"mtime":1675616816207,"results":"10","hashOfConfig":"9"},{"size":1171,"mtime":1675623631198,"results":"11","hashOfConfig":"9"},{"size":2375,"mtime":1675620010061,"results":"12","hashOfConfig":"9"},{"size":1759,"mtime":1675616955018,"results":"13","hashOfConfig":"9"},{"size":1108,"mtime":1675624705826,"results":"14","hashOfConfig":"9"},{"size":4628,"mtime":1675625579826,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1xu5eja",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"43"},"C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\index.js",[],[],[],"C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\App.js",[],[],"C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\header\\Header.js",["44","45"],[],"import React, { useState } from 'react'\r\nimport \"./Header.css\"\r\nimport { NavLink as Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    const [mobileNav,setMobileNav] = useState(false)\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"headerLeft\">\r\n                <Link to='/'><img className=\"header_icon\" alt=\"Logo Image of Imdb\" src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png' /></Link>\r\n\r\n            </div>\r\n\r\n            <div class=\"bars\">\r\n                <a href=\"#\" onClick={() => setMobileNav(!mobileNav)}><i class=\"fas fa-bars\"></i></a>\r\n            </div>\r\n\r\n            <div className={mobileNav ? \"headerRight mobile-nav\" : \"headerRight\"}>\r\n                <Link to=\"/movies/popular\" style={{ textDecoration: 'none' }}><span>Popular</span></Link>\r\n                <Link to='/movies/top_rated' style={{ textDecoration: 'none' }}><span>Top Rated</span></Link>\r\n                <Link to='/movies/upcoming' style={{ textDecoration: 'none' }}><span> Upcoming</span></Link>\r\n            </div>\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",[],"C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\pages\\home\\Home.js",["46","47","48"],[],"import React, { useEffect, useState } from 'react'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport './Home.css'\r\nimport '../../components/mediaQueries/mediaQueries.css'\r\nimport MovieList from '../../components/movieList/MovieList'\r\n\r\nconst Home = () => {\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key=8e647b6393150bbda1a91e715d50e47f').\r\n            then(res => res.json()).\r\n            then(data => setPopular(data.results))\r\n\r\n    }, [])\r\n\r\n    const [popular, setPopular] = useState([])\r\n    return (\r\n        <div className='carousel_wrapper'>\r\n            <Carousel\r\n                showThumbs={false}\r\n                autoPlay={true}\r\n                transitionTime={3}\r\n                infiniteLoop={true}\r\n                showStatus={false}\r\n            >\r\n                {\r\n                    popular.map((movie) => {\r\n                        return <Link style={{textDecoration:\"none\" ,color:'white'}} to = {`/movie/${movie.id}`}>\r\n                            <div className=\"posterImg\">\r\n                                <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} alt=\"Poster Image\" />\r\n                            </div>\r\n\r\n                            <div className=\"posterImg_overlay\">\r\n                                <div className=\"posterImg_title\">\r\n                                    {movie ? movie.original_title : ''}\r\n                                </div>\r\n                                <div className=\"posterImg_runtime\">\r\n                                    {movie ? movie.release_date : \"\"}\r\n                                    <span className=\"posterImage__rating\">\r\n                                        {movie ? movie.vote_average : \"\"}\r\n                                        <i className=\"fas fa-star\" />{\" \"}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"posterImage__description\">{movie ? movie.overview : \"\"}</div>\r\n                            </div>\r\n                        </Link>\r\n\r\n\r\n                    })\r\n                }\r\n            </Carousel>\r\n            <MovieList></MovieList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\card\\Card.js",["49"],[],"import React, { useEffect, useState } from \"react\"\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport \"./Card.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Cards = ({ movie }) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    return <>\r\n        {\r\n            isLoading\r\n                ?\r\n                <div className=\"cards\">\r\n                    <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                        <Skeleton height={300} duration={2} count={4} />\r\n                    </SkeletonTheme>\r\n                </div>\r\n                :\r\n                <Link to={`/movie/${movie.id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                    <div className=\"cards\">\r\n                        <img className=\"cards_img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`} />\r\n                        <div className=\"cards_overlay\">\r\n                            <div className=\"card_title\">{movie ? movie.original_title : \"\"}</div>\r\n                            <div className=\"card_runtime\">\r\n                                {movie ? movie.release_date : \"\"}\r\n                                <span className=\"card_rating\">{movie ? movie.vote_average : \"\"}<i className=\"fas fa-star\" /></span>\r\n                            </div>\r\n                            <div className=\"card_description\">{movie ? movie.overview.slice(0, 110) + \"...\" : \"\"}</div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Cards","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\components\\movieList\\MovieList.js",["50","51"],[],"import React, { useEffect, useState } from 'react'\r\nimport Card from '../card/Card'\r\nimport './MovieList.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../mediaQueries/mediaQueries.css'\r\n\r\nconst MovieList = () => {\r\n    const [movieList, setMovieList] = useState([])\r\n    const { type } = useParams();\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [type])\r\n\r\n    const getData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n            .then(res => res.json())\r\n            .then(data => setMovieList(data.results))\r\n    }\r\n    return (\r\n        <div className=\"movie_list\">\r\n            <h2 className=\"list_title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\r\n            <div className=\"list_cards\">\r\n                {\r\n                    movieList.map(movie => (\r\n                        <Card movie={movie} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","C:\\Users\\ksneh\\OneDrive\\Desktop\\movies\\movie-app\\src\\pages\\movieDetail\\Movie.js",["52","53","54","55","56","57","58"],[],"import React,{useEffect,useState} from 'react'\r\nimport './Movie.css'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Movie = () =>{\r\n    const [movieDetail,setMovie] = useState()\r\n    const {id} = useParams();\r\n    useEffect(()=>{\r\n        getData();\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        getData()\r\n    },[id])\r\n    \r\n    const getData = () => {\r\n        \r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=8e647b6393150bbda1a91e715d50e47f`)\r\n        .then(res => res.json())\r\n        .then(data => setMovie(data))\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie_intro\">\r\n                <img className=\"movie_backdrop\" src={`https://image.tmdb.org/t/p/original/${movieDetail ? movieDetail.backdrop_path : \"\"}`} />\r\n            </div>\r\n            <div className=\"movie_detail\">\r\n                <div className=\"movie_detailLeft\">\r\n                    <div className=\"movie_posterBox\">\r\n                        <img className=\"movie_poster\" src={`https://image.tmdb.org/t/p/original${movieDetail ? movieDetail.poster_path : \"\"}`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie_detailRight\">\r\n                    <div className=\"movie_detailRightTop\">\r\n                        <div className=\"movie_name\">{movieDetail ? movieDetail.original_title : \"\"}</div>\r\n                        <div className=\"movie_tagline\">{movieDetail ? movieDetail.tagline : \"\"}</div>\r\n                        <div className=\"movie_rating\">\r\n                            {movieDetail ? movieDetail.vote_average : \"\"} <i class=\"fas fa-star\" />\r\n                            <span className=\"movie_voteCount\">{movieDetail ? \"(\" + movieDetail.vote_count + \") votes\" : \"\"}</span>\r\n                        </div>\r\n                        <div className=\"movie_runtime\">{movieDetail ? movieDetail.runtime + \" mins\" : \"\"}</div>\r\n                        <div className=\"movie_releaseDate\">{movieDetail ? \"Release date: \" + movieDetail.release_date : \"\"}</div>\r\n                        <div className=\"movie_genres\">\r\n                            {\r\n                                movieDetail && movieDetail.genres\r\n                                    ?\r\n                                    movieDetail.genres.map(genre => (\r\n                                        <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\r\n                                    ))\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie_detailRightBottom\">\r\n                        <div className=\"synopsisText\">Synopsis</div>\r\n                        <div className='text'>{movieDetail ? movieDetail.overview : \"\"}</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"movie_links\">\r\n                <div className=\"movie_heading\">Useful Links</div>\r\n                {\r\n                    movieDetail && movieDetail.homepage && <a href={movieDetail.homepage} target=\"_blank\" style={{ textDecoration: \"none\" }}><p><span className=\"movie_homeButton movie_Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n                {\r\n                    movieDetail && movieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + movieDetail.imdb_id} target=\"_blank\" style={{ textDecoration: \"none\" }}><p><span className=\"movie_imdbButton movie_Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n            </div>\r\n            <div className=\"movie_heading\">Production companies</div>\r\n            <div className=\"movie_production\">\r\n                {\r\n                    movieDetail && movieDetail.production_companies && movieDetail.production_companies.map(company => (\r\n                        <>\r\n                            {\r\n                                company.logo_path\r\n                                &&\r\n                                <span className=\"productionCompanyImage\">\r\n                                    <img className=\"movie_productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\r\n                                    <span>{company.name}</span>\r\n                                </span>\r\n                            }\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Movie",{"ruleId":"59","severity":1,"message":"60","line":10,"column":30,"nodeType":"61","endLine":10,"endColumn":199},{"ruleId":"62","severity":1,"message":"63","line":15,"column":17,"nodeType":"61","endLine":15,"endColumn":70},{"ruleId":"64","severity":1,"message":"65","line":11,"column":101,"nodeType":"66","messageId":"67","endLine":11,"endColumn":102,"fix":"68"},{"ruleId":"64","severity":1,"message":"65","line":12,"column":36,"nodeType":"66","messageId":"67","endLine":12,"endColumn":37,"fix":"69"},{"ruleId":"59","severity":1,"message":"60","line":31,"column":33,"nodeType":"61","endLine":31,"endColumn":134},{"ruleId":"70","severity":1,"message":"71","line":29,"column":25,"nodeType":"61","endLine":29,"endColumn":131},{"ruleId":"72","severity":1,"message":"73","line":12,"column":8,"nodeType":"74","endLine":12,"endColumn":10,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"73","line":16,"column":8,"nodeType":"74","endLine":16,"endColumn":14,"suggestions":"76"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":7,"nodeType":"74","endLine":10,"endColumn":9,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":14,"column":7,"nodeType":"74","endLine":14,"endColumn":11,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"71","line":27,"column":17,"nodeType":"61","endLine":27,"endColumn":143},{"ruleId":"70","severity":1,"message":"71","line":32,"column":25,"nodeType":"61","endLine":32,"endColumn":146},{"ruleId":"79","severity":1,"message":"80","line":67,"column":60,"nodeType":"61","messageId":"81","endLine":67,"endColumn":142,"fix":"82"},{"ruleId":"79","severity":1,"message":"80","line":70,"column":59,"nodeType":"61","messageId":"81","endLine":70,"endColumn":172,"fix":"83"},{"ruleId":"70","severity":1,"message":"71","line":82,"column":37,"nodeType":"61","endLine":82,"endColumn":145},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"84","text":"85"},{"range":"86","text":"85"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["87"],["88"],["89"],["90"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"91","text":"92"},{"range":"93","text":"92"},[500,515],"\r\n            .",[538,553],{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"94","fix":"98"},{"desc":"99","fix":"100"},[3218,3218]," rel=\"noreferrer\"",[3555,3555],"Update the dependencies array to be: [getData]",{"range":"101","text":"102"},"Update the dependencies array to be: [getData, type]",{"range":"103","text":"104"},{"range":"105","text":"102"},"Update the dependencies array to be: [getData, id]",{"range":"106","text":"107"},[366,368],"[getData]",[423,429],"[getData, type]",[265,267],[322,326],"[getData, id]"]